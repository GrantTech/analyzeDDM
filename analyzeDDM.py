##
##	analyzeDDM
##
##	Author: James McCann (mccannjb (at) gmail (dot) com)
##      Written 01-2013
##
##	The purpose of this script is to take one or more gridded,
##	average DDM output files corresponding to a split model 
##	run and combine them for further analysis.
##
##	TODO:
##	Import PseudoNetCDF uamiv reader
##	Write method for importing DDM files
##	Iterate to import all files
##	Create large array for all ozone sensitivities
##	Create dictionary for array that links all sensitivites
##		to their given lat/lon

from PseudoNetCDF.camxfiles.Memmaps import uamiv

def importDDM(ddmFile,species,grp)
# importDDM will import the given DDM average file using PseudoNetCDF
# and assign the species values to a temporary group array
#	ddmFile: location of the DDM grid file
#	species: the number of the species in question (eg. 05 for ozone)
#	grp: group number
	ddm = uamiv(ddmFile)
	#TODO: Pull appropriate species sensitivites
	#TODO: Create group array
	#TODO: Add sensitivities to group array

def linkLocations(grpArray,locationFile,grp)
# linkLocations will assign X/Y locations to entries in the given temporary
# group array from the given location file.
#	grpArray: Array of sensitivities generated by importDDM
#	locationFile: location of the text file containing the X/Y coordinates
#		corresponding to each sensitivity region per group. Based on 
#		the outputs from kcellPrep (pykcellout files)
#	grp: group number 
	locFile=open(locationFile,r)
	#TODO: Pull locations from locationFile
	#TODO: For each kcell location, link to corresponding row in grpArray
	#TODO: Output 

ozoneSpecies = "05"	# This is the modeled species number of
			# ozone for the simulation.

#initialize large array
#for each group:
#	importDDM(ddmFile-grp,ozoneSpecies,grp)
#	linkLocations(array,location-grp,grp)
#	add grp-array to large array
#End result: Large array with location-matched ozone sensitivities from all
#		groups.

	
